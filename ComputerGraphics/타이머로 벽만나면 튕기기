#include <gl/glut.h>					
#include <gl/gl.h>						
#include <gl/glu.h>	
GLfloat Delta = 0.0;
bool a = TRUE;
void MyDisplay() {
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_POLYGON);
    glColor3f(0.0, 0.5, 0.8);
    glVertex3f(-1.0 + Delta, -0.5, 0.0);
    glVertex3f(0.0 + Delta, -0.5, 0.0);
    glVertex3f(0.0 + Delta, 0.5, 0.0);
    glVertex3f(-1.0 + Delta, 0.5, 0.0);
    glEnd();
    glutSwapBuffers();
}
void MyTimer(int Value) {
    if (a == TRUE) {
        if (Delta < 1.0)
        {
            Delta = Delta + 0.01;
        }
        else {
            a = FALSE;
        }
    }
    else if (a == FALSE) {
        if (Delta > 0.01)
        {
            Delta = Delta - 0.01;
        }
        else
            a = TRUE;
    }
    glutPostRedisplay();
    glutTimerFunc(40, MyTimer, 1);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
    glutInitWindowSize(300, 300);
    glutInitWindowPosition(0, 0);
    glutCreateWindow("OpenGL Drawing Example");

    glClearColor(1.0, 1.0, 1.0, 1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-1.0, 1.0, -1.0, 1.0, 1.0, -1.0);

    glutDisplayFunc(MyDisplay);
    glutTimerFunc(40, MyTimer, 3);

    glutMainLoop();
    return 0;
}

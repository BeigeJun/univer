#include <gl/glut.h>					
#include <gl/gl.h>						
#include <gl/glu.h>	
#include <stdlib.h>
#include <stdio.h>
GLfloat Delta = 0.0;
GLint random_x = 0;
GLint random_y = 0;
void MyDisplay() {
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_POLYGON);
    glColor3f(0.0, 0.5, 0.8);
    glVertex3f((random_x-0.1),(300-(random_y-0.1)), 0.0);
    glVertex3f((random_x+0.1),(300-(random_y-0.1)), 0.0);
    glVertex3f((random_x+0.1),(300-(random_y+0.1)), 0.0);
    glVertex3f((random_x-0.1),(300-(random_y+0.1)), 0.0);
    glEnd();
    glutSwapBuffers();
}
void MyTimer(int Value) {
    random_x = rand() % 300;
    random_y = rand() % 300;
    Delta = Delta + 0.01;
    printf("(%d, %d)", random_x, random_y);
    glutPostRedisplay();
    glutTimerFunc(100, MyTimer, 3);
}
void addNewPoint(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        printf("(%d, %d)", x, y);
    }
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
    glutInitWindowSize(300, 300);
    glutInitWindowPosition(0, 0);
    glutCreateWindow("OpenGL Drawing Example");

    glClearColor(1.0, 1.0, 1.0, 1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-1.0, 1.0, -1.0, 1.0, 1.0, -1.0);
    glutMouseFunc(addNewPoint);
    glutDisplayFunc(MyDisplay);
    glutTimerFunc(100, MyTimer, 3);

    glutMainLoop();
    return 0;
}
